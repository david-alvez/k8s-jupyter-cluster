apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-iphyton-master
  labels:
    app: jupyter-iphyton-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-iphyton-master
  template:
    metadata:
      labels:
        app: jupyter-iphyton-master
    spec:
    #  securityContext:
    #    runAsUser: 0
      containers:
      - name: jupyter-iphyton-master
        image: dalvez/jupyter-ipyparallel-kubectl:latest
    #   imagePullPolicy: Always
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 8888
        command: ["/bin/bash","-c","start.sh"]
      #  command: ["/bin/bash","-c","ipcontroller --ip=$(POD_IP) --location=jupyter-iphyton-master --profile-dir=/home/jupyter/work/ --log-to-file --log-level=DEBUG && jupyter notebook --ip=0.0.0.0 --NotebookApp.token=''"]
      #  args: ["ipcontroller --ip=$(POD_IP) --location=jupyter-iphyton-master --profile-dir=/home/jovyan/work/;start-notebook.sh --NotebookApp.token=''"]
        volumeMounts:
        - name: iphyton-profile-volume
          mountPath: /home/jupyter/work
        - name: kubectl-conf
          mountPath: /etc/kubernetes/kubelet.conf
          readOnly: true
        - name: kubelet-certs
          mountPath: /var/lib/kubelet/pki
          readOnly: true
      volumes:
      - name: iphyton-profile-volume
        persistentVolumeClaim:
         claimName: pvc
      - name: kubectl-conf
        hostPath:
          path: /etc/kubernetes/kubelet.conf
      - name: kubelet-certs
        hostPath:
          path: /var/lib/kubelet/pki
